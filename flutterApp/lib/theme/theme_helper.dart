import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary.withOpacity(1),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray30001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(7.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray20002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 16.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray700,
          fontSize: 14.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray50001,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 28.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 25.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90004.withOpacity(0.5),
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 11.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.red700,
          fontSize: 8.fSize,
          fontFamily: 'Plus Jakarta Sans',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray90002,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 18.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF6D2B7D),
    primaryContainer: Color(0XFFE8CEF3),
    secondaryContainer: Color(0X426D2B7D),

    // Error colors
    errorContainer: Color(0XFF4A4A4A),
    onError: Color(0XFF0F393A),

    // On colors(text colors)
    onPrimary: Color(0XB2FFFFFF),
    onPrimaryContainer: Color(0XFF262626),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF010101);
  Color get black90001 => Color(0XFF000000);

  // Blue
  Color get blue600 => Color(0XFF2879E4);
  Color get blueA400 => Color(0XFF1977F3);
  Color get blueA40023 => Color(0X231478FB);

  // BlueGray
  Color get blueGray100 => Color(0XFFC6CBD4);
  Color get blueGray10001 => Color(0XFFD5D5D5);
  Color get blueGray10002 => Color(0XFFCDE3E8);
  Color get blueGray10003 => Color(0XFFD9D9D9);
  Color get blueGray10004 => Color(0XFFCDCDCD);
  Color get blueGray200 => Color(0XFFACACB6);
  Color get blueGray20001 => Color(0XFFADB4C0);
  Color get blueGray300 => Color(0XFF9CA5AE);
  Color get blueGray30001 => Color(0XFF9CA6AE);
  Color get blueGray400 => Color(0XFF838FA0);
  Color get blueGray40001 => Color(0XFF77838F);
  Color get blueGray40002 => Color(0XFF7F8494);
  Color get blueGray40003 => Color(0XFF878E9E);
  Color get blueGray40004 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFEAECF0);
  Color get blueGray5001 => Color(0XFFEAEDEF);
  Color get blueGray700 => Color(0XFF525960);
  Color get blueGray70011 => Color(0X11515151);
  Color get blueGray800 => Color(0XFF2C4364);
  Color get blueGray80001 => Color(0XFF313E5E);
  Color get blueGray80002 => Color(0XFF2D4465);
  Color get blueGray80019 => Color(0X1939564D);
  Color get blueGray900 => Color(0XFF27364E);
  Color get blueGray90001 => Color(0XFF27292D);
  Color get blueGray90002 => Color(0XFF333334);
  Color get blueGray90003 => Color(0XFF333333);
  Color get blueGray90004 => Color(0XFF2C2F4B);
  Color get blueGray90005 => Color(0XFF2D2D2D);

  // BlueGraya
  Color get blueGray2003a => Color(0X3ABCC4CF);
  Color get blueGray8000a => Color(0X0A43474D);

  // BlueGrayc
  Color get blueGray3000c => Color(0X0C8D9BAA);

  // BlueGrayf
  Color get blueGray5003f => Color(0X3F59709D);

  // Gray
  Color get gray100 => Color(0XFFF2F3F6);
  Color get gray10000 => Color(0X00F2F2FF);
  Color get gray10001 => Color(0XFFF6F5EE);
  Color get gray10002 => Color(0XFFF3EEF5);
  Color get gray10003 => Color(0XFFF2F2F3);
  Color get gray10004 => Color(0XFFF5F5F5);
  Color get gray10005 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEDEDED);
  Color get gray20001 => Color(0XFFEAEBEC);
  Color get gray20002 => Color(0XFFEEEEEE);
  Color get gray20003 => Color(0XFFEFEFEF);
  Color get gray20004 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE6E6E6);
  Color get gray30001 => Color(0XFFDCDCDC);
  Color get gray400 => Color(0XFFBFBFBF);
  Color get gray40001 => Color(0XFFB8B8B8);
  Color get gray40002 => Color(0XFFBABABA);
  Color get gray40003 => Color(0XFFC5C5C5);
  Color get gray40004 => Color(0XFFC3C6CE);
  Color get gray40005 => Color(0XFFCACACA);
  Color get gray40006 => Color(0XFFBBBBBB);
  Color get gray50 => Color(0XFFFBFBFD);
  Color get gray500 => Color(0XFFA4A5A7);
  Color get gray50001 => Color(0XFF919191);
  Color get gray50002 => Color(0XFFADADAD);
  Color get gray50003 => Color(0XFFA5A5A5);
  Color get gray50004 => Color(0XFF948FA1);
  Color get gray50005 => Color(0XFF999999);
  Color get gray50006 => Color(0XFF9C9A95);
  Color get gray5001 => Color(0XFFFBFBFB);
  Color get gray5002 => Color(0XFFF8FBFF);
  Color get gray5003 => Color(0XFFF9F9FE);
  Color get gray5004 => Color(0XFFF9F9FF);
  Color get gray5005 => Color(0XFFF9F9FC);
  Color get gray5006 => Color(0XFFF9F9F9);
  Color get gray5007 => Color(0XFFF8F9FB);
  Color get gray5008 => Color(0XFFFAFAFB);
  Color get gray5009 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF6E6E6E);
  Color get gray60001 => Color(0XFF797681);
  Color get gray60002 => Color(0XFF7F7F7F);
  Color get gray700 => Color(0XFF5D5F66);
  Color get gray70001 => Color(0XFF5A5A5A);
  Color get gray70002 => Color(0XFF626262);
  Color get gray70003 => Color(0XFF585858);
  Color get gray70004 => Color(0XFF5D6066);
  Color get gray70005 => Color(0XFF626060);
  Color get gray800 => Color(0XFF3C3B36);
  Color get gray900 => Color(0XFF1A1B23);
  Color get gray90001 => Color(0XFF1D1D20);
  Color get gray90002 => Color(0XFF1E2022);
  Color get gray90003 => Color(0XFF202020);
  Color get gray90004 => Color(0XFF171717);
  Color get gray90005 => Color(0XFF212121);

  // Graye
  Color get gray5001e => Color(0X1E9C9C9C);
  Color get gray6001e => Color(0X1E6F6F6F);
  Color get gray7001e => Color(0X1E5F5F5F);

  // GrayB
  Color get gray600B2 => Color(0XB2786B6B);

  // Grayf
  Color get gray7000f => Color(0X0F555E68);

  // Green
  Color get green400 => Color(0XFF46CB83);
  Color get green500 => Color(0XFF439F6E);
  Color get green600 => Color(0XFF27AE60);
  Color get green800 => Color(0XFF0F9804);

  // LightGreen
  Color get lightGreenA700 => Color(0XFF33FF00);

  // Orange
  Color get orangeA200 => Color(0XFFFC8E43);

  // Pink
  Color get pink100 => Color(0XFFEAB3CD);

  // Purple
  Color get purple200 => Color(0XFFD09BE6);
  Color get purple50 => Color(0XFFFAEAFF);
  Color get purple800 => Color(0XFF6F3280);
  Color get purple900 => Color(0XFF4E008A);

  // Red
  Color get red400 => Color(0XFFEB5757);
  Color get red500 => Color(0XFFFE2C25);
  Color get red50001 => Color(0XFFFB4343);
  Color get red700 => Color(0XFFCF3C3C);
  Color get redA200 => Color(0XFFFF4A4A);
  Color get redA700 => Color(0XFFF91010);

  // Teal
  Color get teal300 => Color(0XFF36AAB9);
  Color get teal800 => Color(0XFF14785A);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
