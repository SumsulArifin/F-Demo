import 'models/sign_in_model.dart';import 'package:flutter/material.dart';import 'package:mdsumsul_s_application5/core/app_export.dart';import 'package:mdsumsul_s_application5/core/utils/validation_functions.dart';import 'package:mdsumsul_s_application5/widgets/custom_elevated_button.dart';import 'package:mdsumsul_s_application5/widgets/custom_text_form_field.dart';import 'provider/sign_in_provider.dart';import 'package:mdsumsul_s_application5/domain/googleauth/google_auth_helper.dart';import 'package:mdsumsul_s_application5/domain/facebookauth/facebook_auth_helper.dart';class SignInScreen extends StatefulWidget {const SignInScreen({Key? key}) : super(key: key);

@override SignInScreenState createState() =>  SignInScreenState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => SignInProvider(), child: SignInScreen()); } 
 }

// ignore_for_file: must_be_immutable
class SignInScreenState extends State<SignInScreen> {GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(height: 25.v), CustomImageView(imagePath: ImageConstant.imgLogoNw1, height: 109.v, width: 110.h, radius: BorderRadius.circular(54.h), alignment: Alignment.center), SizedBox(height: 35.v), SizedBox(height: 580.v, width: 323.h, child: Stack(alignment: Alignment.topRight, children: [Align(alignment: Alignment.bottomRight, child: Container(width: 261.h, margin: EdgeInsets.only(right: 10.h, bottom: 69.v), child: RichText(text: TextSpan(children: [TextSpan(text: "msg_protected_by_recaptcha2".tr, style: CustomTextStyles.bodySmallInterBluegray40004_1), TextSpan(text: "lbl_privacy_policy".tr, style: CustomTextStyles.bodySmallInterPurple800), TextSpan(text: "lbl_and".tr, style: CustomTextStyles.bodySmallInterBluegray40004_1), TextSpan(text: "msg_terms_of_service".tr, style: CustomTextStyles.bodySmallInterPurple800), TextSpan(text: "lbl".tr, style: CustomTextStyles.bodySmallInterBluegray40004_1)]), textAlign: TextAlign.left))), Align(alignment: Alignment.topRight, child: Column(mainAxisSize: MainAxisSize.min, children: [Text("lbl_sign_in2".tr, style: CustomTextStyles.headlineSmallInterGray90003), SizedBox(height: 13.v), Row(mainAxisAlignment: MainAxisAlignment.center, children: [Text("msg_don_t_have_an_account".tr, style: CustomTextStyles.bodyMediumInterGray90003), Padding(padding: EdgeInsets.only(left: 4.h), child: Text("lbl_sign_up2".tr, style: CustomTextStyles.titleSmallInterPurple800))]), SizedBox(height: 24.v), Selector<SignInProvider, TextEditingController?>(selector: (context, provider) => provider.emailController, builder: (context, emailController, child) {return CustomTextFormField(controller: emailController, hintText: "lbl_email_address".tr, hintStyle: CustomTextStyles.bodyMediumInterBluegray40004, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;});}), SizedBox(height: 24.v), Consumer<SignInProvider>(builder: (context, provider, child) {return CustomTextFormField(controller: provider.passwordController, hintText: "lbl_password".tr, hintStyle: CustomTextStyles.bodyMediumInterBluegray40004, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {provider.changePasswordVisibility();}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 12.v, 12.h, 12.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 48.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: provider.isShowPassword, contentPadding: EdgeInsets.only(left: 16.h, top: 15.v, bottom: 15.v));}), SizedBox(height: 25.v), Align(alignment: Alignment.centerLeft, child: Text("msg_forgot_password".tr, style: CustomTextStyles.bodyMediumInterPurple800)), SizedBox(height: 32.v), CustomElevatedButton(height: 48.v, text: "lbl_sign_in".tr, buttonStyle: CustomButtonStyles.fillPurple, buttonTextStyle: CustomTextStyles.titleSmallInterOnPrimary), SizedBox(height: 17.v), Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 6.v, bottom: 8.v), child: SizedBox(width: 117.h, child: Divider(color: appTheme.gray30001))), Padding(padding: EdgeInsets.only(left: 12.h), child: Text("lbl_or".tr, style: CustomTextStyles.bodyMediumInterBluegray40004)), Padding(padding: EdgeInsets.only(top: 6.v, bottom: 8.v), child: SizedBox(width: 129.h, child: Divider(color: appTheme.gray30001, indent: 12.h)))]), SizedBox(height: 16.v), Row(mainAxisAlignment: MainAxisAlignment.center, children: [GestureDetector(onTap: () {onTapButton(context);}, child: Container(width: 124.h, padding: EdgeInsets.symmetric(horizontal: 25.h, vertical: 12.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgGoogle, height: 16.adaptSize, width: 16.adaptSize, margin: EdgeInsets.only(top: 3.v, bottom: 1.v)), Padding(padding: EdgeInsets.only(top: 3.v), child: Text("lbl_google".tr, style: CustomTextStyles.titleSmallInterGray90003))]))), GestureDetector(onTap: () {onTapButton1(context);}, child: Container(width: 124.h, margin: EdgeInsets.only(left: 23.h), padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 14.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: 16.adaptSize, width: 16.adaptSize, margin: EdgeInsets.only(top: 2.v), padding: EdgeInsets.symmetric(horizontal: 4.h), decoration: AppDecoration.fillBlueA.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: CustomImageView(imagePath: ImageConstant.imgFacebook, height: 12.v, width: 6.h, alignment: Alignment.bottomCenter)), Padding(padding: EdgeInsets.only(left: 8.h, top: 1.v), child: Text("lbl_facebook".tr, style: CustomTextStyles.titleSmallInterGray90003))])))])])), Opacity(opacity: 0.2, child: CustomImageView(imagePath: ImageConstant.imgUnion197x217, height: 197.v, width: 217.h, alignment: Alignment.bottomLeft))]))]))))); } 
onTapButton(BuildContext context) async  {         await GoogleAuthHelper().googleSignInProcess().then((googleUser) {
          if(googleUser!=null){
            //TODO Actions to be performed after signin
          } else {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('user data is empty')));
          }
        }).catchError((onError) {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
        });
         } 
onTapButton1(BuildContext context) async  {             await FacebookAuthHelper().facebookSignInProcess().then((facebookUser) {
              //TODO Actions to be performed after signin
              }).catchError((onError) {
              ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
            });
             } 
 }
